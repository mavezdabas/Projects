//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Blocks_Securities", "Security", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Security), "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Block), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_ExecutedBlocks_Blocks", "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Block), "ExecutedBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.ExecutedBlock), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_OrderAllocations_Blocks", "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Block), "OrderAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.OrderAllocation), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Orders_Blocks", "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DummyDataCreator.Block), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Order), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Orders_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Client), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Order), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Portfolio_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DummyDataCreator.Client), "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Portfolio), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_OrderAllocations_ExecutedBlocks", "ExecutedBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.ExecutedBlock), "OrderAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.OrderAllocation), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_OrderAllocations_Orders", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Order), "OrderAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.OrderAllocation), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Orders_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Portfolio), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Order), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Orders_Securities", "Security", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Security), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Order), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Orders_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Status), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Order), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Orders_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.User), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Order), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_Orders_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DummyDataCreator.User), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.Order), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_ProposedBlocks_Securities", "Security", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Security), "ProposedBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.ProposedBlock), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_SecurityConfigurationDetails_Securities", "Security", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.Security), "SecurityConfigurationDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.SecurityConfigurationDetail), true)]
[assembly: EdmRelationshipAttribute("EquityTradingDBModel", "FK_User_UserRole", "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DummyDataCreator.UserRole), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DummyDataCreator.User), true)]

#endregion

namespace DummyDataCreator
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EquityTradingDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EquityTradingDBEntities object using the connection string found in the 'EquityTradingDBEntities' section of the application configuration file.
        /// </summary>
        public EquityTradingDBEntities() : base("name=EquityTradingDBEntities", "EquityTradingDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EquityTradingDBEntities object.
        /// </summary>
        public EquityTradingDBEntities(string connectionString) : base(connectionString, "EquityTradingDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EquityTradingDBEntities object.
        /// </summary>
        public EquityTradingDBEntities(EntityConnection connection) : base(connection, "EquityTradingDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AllocationMethod> AllocationMethods
        {
            get
            {
                if ((_AllocationMethods == null))
                {
                    _AllocationMethods = base.CreateObjectSet<AllocationMethod>("AllocationMethods");
                }
                return _AllocationMethods;
            }
        }
        private ObjectSet<AllocationMethod> _AllocationMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Block> Blocks
        {
            get
            {
                if ((_Blocks == null))
                {
                    _Blocks = base.CreateObjectSet<Block>("Blocks");
                }
                return _Blocks;
            }
        }
        private ObjectSet<Block> _Blocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExecutedBlock> ExecutedBlocks
        {
            get
            {
                if ((_ExecutedBlocks == null))
                {
                    _ExecutedBlocks = base.CreateObjectSet<ExecutedBlock>("ExecutedBlocks");
                }
                return _ExecutedBlocks;
            }
        }
        private ObjectSet<ExecutedBlock> _ExecutedBlocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderAllocation> OrderAllocations
        {
            get
            {
                if ((_OrderAllocations == null))
                {
                    _OrderAllocations = base.CreateObjectSet<OrderAllocation>("OrderAllocations");
                }
                return _OrderAllocations;
            }
        }
        private ObjectSet<OrderAllocation> _OrderAllocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Portfolio> Portfolios
        {
            get
            {
                if ((_Portfolios == null))
                {
                    _Portfolios = base.CreateObjectSet<Portfolio>("Portfolios");
                }
                return _Portfolios;
            }
        }
        private ObjectSet<Portfolio> _Portfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProposedBlock> ProposedBlocks
        {
            get
            {
                if ((_ProposedBlocks == null))
                {
                    _ProposedBlocks = base.CreateObjectSet<ProposedBlock>("ProposedBlocks");
                }
                return _ProposedBlocks;
            }
        }
        private ObjectSet<ProposedBlock> _ProposedBlocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Security> Securities
        {
            get
            {
                if ((_Securities == null))
                {
                    _Securities = base.CreateObjectSet<Security>("Securities");
                }
                return _Securities;
            }
        }
        private ObjectSet<Security> _Securities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityConfigurationDetail> SecurityConfigurationDetails
        {
            get
            {
                if ((_SecurityConfigurationDetails == null))
                {
                    _SecurityConfigurationDetails = base.CreateObjectSet<SecurityConfigurationDetail>("SecurityConfigurationDetails");
                }
                return _SecurityConfigurationDetails;
            }
        }
        private ObjectSet<SecurityConfigurationDetail> _SecurityConfigurationDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllocationMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllocationMethods(AllocationMethod allocationMethod)
        {
            base.AddObject("AllocationMethods", allocationMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlocks(Block block)
        {
            base.AddObject("Blocks", block);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExecutedBlocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExecutedBlocks(ExecutedBlock executedBlock)
        {
            base.AddObject("ExecutedBlocks", executedBlock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderAllocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderAllocations(OrderAllocation orderAllocation)
        {
            base.AddObject("OrderAllocations", orderAllocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Portfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolios(Portfolio portfolio)
        {
            base.AddObject("Portfolios", portfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProposedBlocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProposedBlocks(ProposedBlock proposedBlock)
        {
            base.AddObject("ProposedBlocks", proposedBlock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Securities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurities(Security security)
        {
            base.AddObject("Securities", security);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityConfigurationDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityConfigurationDetails(SecurityConfigurationDetail securityConfigurationDetail)
        {
            base.AddObject("SecurityConfigurationDetails", securityConfigurationDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="AllocationMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AllocationMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AllocationMethod object.
        /// </summary>
        /// <param name="methodID">Initial value of the MethodID property.</param>
        /// <param name="methodName">Initial value of the MethodName property.</param>
        public static AllocationMethod CreateAllocationMethod(global::System.Int32 methodID, global::System.String methodName)
        {
            AllocationMethod allocationMethod = new AllocationMethod();
            allocationMethod.MethodID = methodID;
            allocationMethod.MethodName = methodName;
            return allocationMethod;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MethodID
        {
            get
            {
                return _MethodID;
            }
            set
            {
                if (_MethodID != value)
                {
                    OnMethodIDChanging(value);
                    ReportPropertyChanging("MethodID");
                    _MethodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MethodID");
                    OnMethodIDChanged();
                }
            }
        }
        private global::System.Int32 _MethodID;
        partial void OnMethodIDChanging(global::System.Int32 value);
        partial void OnMethodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MethodName
        {
            get
            {
                return _MethodName;
            }
            set
            {
                OnMethodNameChanging(value);
                ReportPropertyChanging("MethodName");
                _MethodName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MethodName");
                OnMethodNameChanged();
            }
        }
        private global::System.String _MethodName;
        partial void OnMethodNameChanging(global::System.String value);
        partial void OnMethodNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="Block")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Block : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Block object.
        /// </summary>
        /// <param name="blockID">Initial value of the BlockID property.</param>
        /// <param name="traderID">Initial value of the TraderID property.</param>
        /// <param name="securityID">Initial value of the SecurityID property.</param>
        /// <param name="blockSide">Initial value of the BlockSide property.</param>
        /// <param name="blockStatus">Initial value of the BlockStatus property.</param>
        /// <param name="limitPrice">Initial value of the LimitPrice property.</param>
        /// <param name="stopPrice">Initial value of the StopPrice property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="executedQuantity">Initial value of the ExecutedQuantity property.</param>
        /// <param name="openQuantity">Initial value of the OpenQuantity property.</param>
        public static Block CreateBlock(global::System.Int32 blockID, global::System.Int32 traderID, global::System.Int32 securityID, global::System.String blockSide, global::System.Int32 blockStatus, global::System.Decimal limitPrice, global::System.Decimal stopPrice, global::System.Int32 totalQuantity, global::System.Int32 executedQuantity, global::System.Int32 openQuantity)
        {
            Block block = new Block();
            block.BlockID = blockID;
            block.TraderID = traderID;
            block.SecurityID = securityID;
            block.BlockSide = blockSide;
            block.BlockStatus = blockStatus;
            block.LimitPrice = limitPrice;
            block.StopPrice = stopPrice;
            block.TotalQuantity = totalQuantity;
            block.ExecutedQuantity = executedQuantity;
            block.OpenQuantity = openQuantity;
            return block;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlockID
        {
            get
            {
                return _BlockID;
            }
            set
            {
                if (_BlockID != value)
                {
                    OnBlockIDChanging(value);
                    ReportPropertyChanging("BlockID");
                    _BlockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlockID");
                    OnBlockIDChanged();
                }
            }
        }
        private global::System.Int32 _BlockID;
        partial void OnBlockIDChanging(global::System.Int32 value);
        partial void OnBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TraderID
        {
            get
            {
                return _TraderID;
            }
            set
            {
                OnTraderIDChanging(value);
                ReportPropertyChanging("TraderID");
                _TraderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TraderID");
                OnTraderIDChanged();
            }
        }
        private global::System.Int32 _TraderID;
        partial void OnTraderIDChanging(global::System.Int32 value);
        partial void OnTraderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                OnSecurityIDChanging(value);
                ReportPropertyChanging("SecurityID");
                _SecurityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityID");
                OnSecurityIDChanged();
            }
        }
        private global::System.Int32 _SecurityID;
        partial void OnSecurityIDChanging(global::System.Int32 value);
        partial void OnSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BlockSide
        {
            get
            {
                return _BlockSide;
            }
            set
            {
                OnBlockSideChanging(value);
                ReportPropertyChanging("BlockSide");
                _BlockSide = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BlockSide");
                OnBlockSideChanged();
            }
        }
        private global::System.String _BlockSide;
        partial void OnBlockSideChanging(global::System.String value);
        partial void OnBlockSideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlockStatus
        {
            get
            {
                return _BlockStatus;
            }
            set
            {
                OnBlockStatusChanging(value);
                ReportPropertyChanging("BlockStatus");
                _BlockStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockStatus");
                OnBlockStatusChanged();
            }
        }
        private global::System.Int32 _BlockStatus;
        partial void OnBlockStatusChanging(global::System.Int32 value);
        partial void OnBlockStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LimitPrice
        {
            get
            {
                return _LimitPrice;
            }
            set
            {
                OnLimitPriceChanging(value);
                ReportPropertyChanging("LimitPrice");
                _LimitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitPrice");
                OnLimitPriceChanged();
            }
        }
        private global::System.Decimal _LimitPrice;
        partial void OnLimitPriceChanging(global::System.Decimal value);
        partial void OnLimitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal StopPrice
        {
            get
            {
                return _StopPrice;
            }
            set
            {
                OnStopPriceChanging(value);
                ReportPropertyChanging("StopPrice");
                _StopPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopPrice");
                OnStopPriceChanged();
            }
        }
        private global::System.Decimal _StopPrice;
        partial void OnStopPriceChanging(global::System.Decimal value);
        partial void OnStopPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExecutedQuantity
        {
            get
            {
                return _ExecutedQuantity;
            }
            set
            {
                OnExecutedQuantityChanging(value);
                ReportPropertyChanging("ExecutedQuantity");
                _ExecutedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecutedQuantity");
                OnExecutedQuantityChanged();
            }
        }
        private global::System.Int32 _ExecutedQuantity;
        partial void OnExecutedQuantityChanging(global::System.Int32 value);
        partial void OnExecutedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OpenQuantity
        {
            get
            {
                return _OpenQuantity;
            }
            set
            {
                OnOpenQuantityChanging(value);
                ReportPropertyChanging("OpenQuantity");
                _OpenQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenQuantity");
                OnOpenQuantityChanged();
            }
        }
        private global::System.Int32 _OpenQuantity;
        partial void OnOpenQuantityChanging(global::System.Int32 value);
        partial void OnOpenQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Blocks_Securities", "Security")]
        public Security Security
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_Blocks_Securities", "Security").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_Blocks_Securities", "Security").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Security> SecurityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_Blocks_Securities", "Security");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Security>("EquityTradingDBModel.FK_Blocks_Securities", "Security", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_ExecutedBlocks_Blocks", "ExecutedBlock")]
        public EntityCollection<ExecutedBlock> ExecutedBlocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExecutedBlock>("EquityTradingDBModel.FK_ExecutedBlocks_Blocks", "ExecutedBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExecutedBlock>("EquityTradingDBModel.FK_ExecutedBlocks_Blocks", "ExecutedBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_OrderAllocations_Blocks", "OrderAllocation")]
        public EntityCollection<OrderAllocation> OrderAllocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderAllocation>("EquityTradingDBModel.FK_OrderAllocations_Blocks", "OrderAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderAllocation>("EquityTradingDBModel.FK_OrderAllocations_Blocks", "OrderAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Blocks", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Blocks", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Blocks", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="clientName">Initial value of the ClientName property.</param>
        public static Client CreateClient(global::System.Int32 clientID, global::System.String clientName)
        {
            Client client = new Client();
            client.ClientID = clientID;
            client.ClientName = clientName;
            return client;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                if (_ClientID != value)
                {
                    OnClientIDChanging(value);
                    ReportPropertyChanging("ClientID");
                    _ClientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientID");
                    OnClientIDChanged();
                }
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Client", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Client", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Client", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Portfolio_Client", "Portfolio")]
        public EntityCollection<Portfolio> Portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Portfolio>("EquityTradingDBModel.FK_Portfolio_Client", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Portfolio>("EquityTradingDBModel.FK_Portfolio_Client", "Portfolio", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="ExecutedBlock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExecutedBlock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExecutedBlock object.
        /// </summary>
        /// <param name="executedBlockID">Initial value of the ExecutedBlockID property.</param>
        /// <param name="blockID">Initial value of the BlockID property.</param>
        /// <param name="executedQuantity">Initial value of the ExecutedQuantity property.</param>
        /// <param name="transactionPrice">Initial value of the TransactionPrice property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="transactionTime">Initial value of the TransactionTime property.</param>
        public static ExecutedBlock CreateExecutedBlock(global::System.Int32 executedBlockID, global::System.Int32 blockID, global::System.Int32 executedQuantity, global::System.Decimal transactionPrice, global::System.Int32 status, global::System.DateTime transactionTime)
        {
            ExecutedBlock executedBlock = new ExecutedBlock();
            executedBlock.ExecutedBlockID = executedBlockID;
            executedBlock.BlockID = blockID;
            executedBlock.ExecutedQuantity = executedQuantity;
            executedBlock.TransactionPrice = transactionPrice;
            executedBlock.Status = status;
            executedBlock.TransactionTime = transactionTime;
            return executedBlock;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExecutedBlockID
        {
            get
            {
                return _ExecutedBlockID;
            }
            set
            {
                if (_ExecutedBlockID != value)
                {
                    OnExecutedBlockIDChanging(value);
                    ReportPropertyChanging("ExecutedBlockID");
                    _ExecutedBlockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExecutedBlockID");
                    OnExecutedBlockIDChanged();
                }
            }
        }
        private global::System.Int32 _ExecutedBlockID;
        partial void OnExecutedBlockIDChanging(global::System.Int32 value);
        partial void OnExecutedBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlockID
        {
            get
            {
                return _BlockID;
            }
            set
            {
                OnBlockIDChanging(value);
                ReportPropertyChanging("BlockID");
                _BlockID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockID");
                OnBlockIDChanged();
            }
        }
        private global::System.Int32 _BlockID;
        partial void OnBlockIDChanging(global::System.Int32 value);
        partial void OnBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExecutedQuantity
        {
            get
            {
                return _ExecutedQuantity;
            }
            set
            {
                OnExecutedQuantityChanging(value);
                ReportPropertyChanging("ExecutedQuantity");
                _ExecutedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecutedQuantity");
                OnExecutedQuantityChanged();
            }
        }
        private global::System.Int32 _ExecutedQuantity;
        partial void OnExecutedQuantityChanging(global::System.Int32 value);
        partial void OnExecutedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TransactionPrice
        {
            get
            {
                return _TransactionPrice;
            }
            set
            {
                OnTransactionPriceChanging(value);
                ReportPropertyChanging("TransactionPrice");
                _TransactionPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionPrice");
                OnTransactionPriceChanged();
            }
        }
        private global::System.Decimal _TransactionPrice;
        partial void OnTransactionPriceChanging(global::System.Decimal value);
        partial void OnTransactionPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionTime
        {
            get
            {
                return _TransactionTime;
            }
            set
            {
                OnTransactionTimeChanging(value);
                ReportPropertyChanging("TransactionTime");
                _TransactionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTime");
                OnTransactionTimeChanged();
            }
        }
        private global::System.DateTime _TransactionTime;
        partial void OnTransactionTimeChanging(global::System.DateTime value);
        partial void OnTransactionTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_ExecutedBlocks_Blocks", "Block")]
        public Block Block
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_ExecutedBlocks_Blocks", "Block").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_ExecutedBlocks_Blocks", "Block").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Block> BlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_ExecutedBlocks_Blocks", "Block");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Block>("EquityTradingDBModel.FK_ExecutedBlocks_Blocks", "Block", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_OrderAllocations_ExecutedBlocks", "OrderAllocation")]
        public EntityCollection<OrderAllocation> OrderAllocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderAllocation>("EquityTradingDBModel.FK_OrderAllocations_ExecutedBlocks", "OrderAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderAllocation>("EquityTradingDBModel.FK_OrderAllocations_ExecutedBlocks", "OrderAllocation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="securityID">Initial value of the SecurityID property.</param>
        /// <param name="side">Initial value of the Side property.</param>
        /// <param name="orderType">Initial value of the OrderType property.</param>
        /// <param name="orderQualifier">Initial value of the OrderQualifier property.</param>
        /// <param name="managerID">Initial value of the ManagerID property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="openQuantity">Initial value of the OpenQuantity property.</param>
        /// <param name="allocatedQuantity">Initial value of the AllocatedQuantity property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="portfolioID">Initial value of the PortfolioID property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="accountType">Initial value of the AccountType property.</param>
        public static Order CreateOrder(global::System.Int32 orderID, global::System.Int32 securityID, global::System.String side, global::System.String orderType, global::System.String orderQualifier, global::System.Int32 managerID, global::System.Int32 totalQuantity, global::System.Int32 openQuantity, global::System.Int32 allocatedQuantity, global::System.Int32 clientID, global::System.Int32 portfolioID, global::System.Int32 statusID, global::System.String accountType)
        {
            Order order = new Order();
            order.OrderID = orderID;
            order.SecurityID = securityID;
            order.Side = side;
            order.OrderType = orderType;
            order.OrderQualifier = orderQualifier;
            order.ManagerID = managerID;
            order.TotalQuantity = totalQuantity;
            order.OpenQuantity = openQuantity;
            order.AllocatedQuantity = allocatedQuantity;
            order.ClientID = clientID;
            order.PortfolioID = portfolioID;
            order.StatusID = statusID;
            order.AccountType = accountType;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                OnSecurityIDChanging(value);
                ReportPropertyChanging("SecurityID");
                _SecurityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityID");
                OnSecurityIDChanged();
            }
        }
        private global::System.Int32 _SecurityID;
        partial void OnSecurityIDChanging(global::System.Int32 value);
        partial void OnSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Side
        {
            get
            {
                return _Side;
            }
            set
            {
                OnSideChanging(value);
                ReportPropertyChanging("Side");
                _Side = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Side");
                OnSideChanged();
            }
        }
        private global::System.String _Side;
        partial void OnSideChanging(global::System.String value);
        partial void OnSideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderType
        {
            get
            {
                return _OrderType;
            }
            set
            {
                OnOrderTypeChanging(value);
                ReportPropertyChanging("OrderType");
                _OrderType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderType");
                OnOrderTypeChanged();
            }
        }
        private global::System.String _OrderType;
        partial void OnOrderTypeChanging(global::System.String value);
        partial void OnOrderTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderQualifier
        {
            get
            {
                return _OrderQualifier;
            }
            set
            {
                OnOrderQualifierChanging(value);
                ReportPropertyChanging("OrderQualifier");
                _OrderQualifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderQualifier");
                OnOrderQualifierChanged();
            }
        }
        private global::System.String _OrderQualifier;
        partial void OnOrderQualifierChanging(global::System.String value);
        partial void OnOrderQualifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TraderID
        {
            get
            {
                return _TraderID;
            }
            set
            {
                OnTraderIDChanging(value);
                ReportPropertyChanging("TraderID");
                _TraderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TraderID");
                OnTraderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TraderID;
        partial void OnTraderIDChanging(Nullable<global::System.Int32> value);
        partial void OnTraderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private global::System.Int32 _ManagerID;
        partial void OnManagerIDChanging(global::System.Int32 value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OpenQuantity
        {
            get
            {
                return _OpenQuantity;
            }
            set
            {
                OnOpenQuantityChanging(value);
                ReportPropertyChanging("OpenQuantity");
                _OpenQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenQuantity");
                OnOpenQuantityChanged();
            }
        }
        private global::System.Int32 _OpenQuantity;
        partial void OnOpenQuantityChanging(global::System.Int32 value);
        partial void OnOpenQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AllocatedQuantity
        {
            get
            {
                return _AllocatedQuantity;
            }
            set
            {
                OnAllocatedQuantityChanging(value);
                ReportPropertyChanging("AllocatedQuantity");
                _AllocatedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllocatedQuantity");
                OnAllocatedQuantityChanged();
            }
        }
        private global::System.Int32 _AllocatedQuantity;
        partial void OnAllocatedQuantityChanging(global::System.Int32 value);
        partial void OnAllocatedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> StopPrice
        {
            get
            {
                return _StopPrice;
            }
            set
            {
                OnStopPriceChanging(value);
                ReportPropertyChanging("StopPrice");
                _StopPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopPrice");
                OnStopPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _StopPrice;
        partial void OnStopPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnStopPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LimitPrice
        {
            get
            {
                return _LimitPrice;
            }
            set
            {
                OnLimitPriceChanging(value);
                ReportPropertyChanging("LimitPrice");
                _LimitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitPrice");
                OnLimitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _LimitPrice;
        partial void OnLimitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnLimitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Notify
        {
            get
            {
                return _Notify;
            }
            set
            {
                OnNotifyChanging(value);
                ReportPropertyChanging("Notify");
                _Notify = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notify");
                OnNotifyChanged();
            }
        }
        private Nullable<global::System.Boolean> _Notify;
        partial void OnNotifyChanging(Nullable<global::System.Boolean> value);
        partial void OnNotifyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortfolioID
        {
            get
            {
                return _PortfolioID;
            }
            set
            {
                OnPortfolioIDChanging(value);
                ReportPropertyChanging("PortfolioID");
                _PortfolioID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioID");
                OnPortfolioIDChanged();
            }
        }
        private global::System.Int32 _PortfolioID;
        partial void OnPortfolioIDChanging(global::System.Int32 value);
        partial void OnPortfolioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BlockID
        {
            get
            {
                return _BlockID;
            }
            set
            {
                OnBlockIDChanging(value);
                ReportPropertyChanging("BlockID");
                _BlockID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockID");
                OnBlockIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BlockID;
        partial void OnBlockIDChanging(Nullable<global::System.Int32> value);
        partial void OnBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] BookTime
        {
            get
            {
                return StructuralObject.GetValidValue(_BookTime);
            }
            set
            {
                OnBookTimeChanging(value);
                ReportPropertyChanging("BookTime");
                _BookTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BookTime");
                OnBookTimeChanged();
            }
        }
        private global::System.Byte[] _BookTime;
        partial void OnBookTimeChanging(global::System.Byte[] value);
        partial void OnBookTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TransactionPrice
        {
            get
            {
                return _TransactionPrice;
            }
            set
            {
                OnTransactionPriceChanging(value);
                ReportPropertyChanging("TransactionPrice");
                _TransactionPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionPrice");
                OnTransactionPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _TransactionPrice;
        partial void OnTransactionPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnTransactionPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionTime
        {
            get
            {
                return _TransactionTime;
            }
            set
            {
                OnTransactionTimeChanging(value);
                ReportPropertyChanging("TransactionTime");
                _TransactionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTime");
                OnTransactionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionTime;
        partial void OnTransactionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Blocks", "Block")]
        public Block Block
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_Orders_Blocks", "Block").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_Orders_Blocks", "Block").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Block> BlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_Orders_Blocks", "Block");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Block>("EquityTradingDBModel.FK_Orders_Blocks", "Block", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EquityTradingDBModel.FK_Orders_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EquityTradingDBModel.FK_Orders_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EquityTradingDBModel.FK_Orders_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("EquityTradingDBModel.FK_Orders_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_OrderAllocations_Orders", "OrderAllocation")]
        public EntityCollection<OrderAllocation> OrderAllocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderAllocation>("EquityTradingDBModel.FK_OrderAllocations_Orders", "OrderAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderAllocation>("EquityTradingDBModel.FK_OrderAllocations_Orders", "OrderAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Portfolio", "Portfolio")]
        public Portfolio Portfolio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("EquityTradingDBModel.FK_Orders_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("EquityTradingDBModel.FK_Orders_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> PortfolioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("EquityTradingDBModel.FK_Orders_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("EquityTradingDBModel.FK_Orders_Portfolio", "Portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Securities", "Security")]
        public Security Security
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_Orders_Securities", "Security").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_Orders_Securities", "Security").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Security> SecurityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_Orders_Securities", "Security");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Security>("EquityTradingDBModel.FK_Orders_Securities", "Security", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("EquityTradingDBModel.FK_Orders_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("EquityTradingDBModel.FK_Orders_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("EquityTradingDBModel.FK_Orders_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("EquityTradingDBModel.FK_Orders_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EquityTradingDBModel.FK_Orders_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EquityTradingDBModel.FK_Orders_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EquityTradingDBModel.FK_Orders_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EquityTradingDBModel.FK_Orders_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EquityTradingDBModel.FK_Orders_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EquityTradingDBModel.FK_Orders_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EquityTradingDBModel.FK_Orders_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EquityTradingDBModel.FK_Orders_User1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="OrderAllocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderAllocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderAllocation object.
        /// </summary>
        /// <param name="allocationID">Initial value of the AllocationID property.</param>
        /// <param name="executionID">Initial value of the ExecutionID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="blockID">Initial value of the BlockID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="allocatedQuantity">Initial value of the AllocatedQuantity property.</param>
        /// <param name="transactionFee">Initial value of the TransactionFee property.</param>
        /// <param name="transactionPrice">Initial value of the TransactionPrice property.</param>
        public static OrderAllocation CreateOrderAllocation(global::System.Int32 allocationID, global::System.Int32 executionID, global::System.Int32 orderID, global::System.Int32 blockID, global::System.Int32 status, global::System.Int32 allocatedQuantity, global::System.Decimal transactionFee, global::System.Decimal transactionPrice)
        {
            OrderAllocation orderAllocation = new OrderAllocation();
            orderAllocation.AllocationID = allocationID;
            orderAllocation.ExecutionID = executionID;
            orderAllocation.OrderID = orderID;
            orderAllocation.BlockID = blockID;
            orderAllocation.Status = status;
            orderAllocation.AllocatedQuantity = allocatedQuantity;
            orderAllocation.TransactionFee = transactionFee;
            orderAllocation.TransactionPrice = transactionPrice;
            return orderAllocation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AllocationID
        {
            get
            {
                return _AllocationID;
            }
            set
            {
                if (_AllocationID != value)
                {
                    OnAllocationIDChanging(value);
                    ReportPropertyChanging("AllocationID");
                    _AllocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AllocationID");
                    OnAllocationIDChanged();
                }
            }
        }
        private global::System.Int32 _AllocationID;
        partial void OnAllocationIDChanging(global::System.Int32 value);
        partial void OnAllocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExecutionID
        {
            get
            {
                return _ExecutionID;
            }
            set
            {
                OnExecutionIDChanging(value);
                ReportPropertyChanging("ExecutionID");
                _ExecutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecutionID");
                OnExecutionIDChanged();
            }
        }
        private global::System.Int32 _ExecutionID;
        partial void OnExecutionIDChanging(global::System.Int32 value);
        partial void OnExecutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlockID
        {
            get
            {
                return _BlockID;
            }
            set
            {
                OnBlockIDChanging(value);
                ReportPropertyChanging("BlockID");
                _BlockID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockID");
                OnBlockIDChanged();
            }
        }
        private global::System.Int32 _BlockID;
        partial void OnBlockIDChanging(global::System.Int32 value);
        partial void OnBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AllocatedQuantity
        {
            get
            {
                return _AllocatedQuantity;
            }
            set
            {
                OnAllocatedQuantityChanging(value);
                ReportPropertyChanging("AllocatedQuantity");
                _AllocatedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllocatedQuantity");
                OnAllocatedQuantityChanged();
            }
        }
        private global::System.Int32 _AllocatedQuantity;
        partial void OnAllocatedQuantityChanging(global::System.Int32 value);
        partial void OnAllocatedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TransactionFee
        {
            get
            {
                return _TransactionFee;
            }
            set
            {
                OnTransactionFeeChanging(value);
                ReportPropertyChanging("TransactionFee");
                _TransactionFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionFee");
                OnTransactionFeeChanged();
            }
        }
        private global::System.Decimal _TransactionFee;
        partial void OnTransactionFeeChanging(global::System.Decimal value);
        partial void OnTransactionFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TransactionPrice
        {
            get
            {
                return _TransactionPrice;
            }
            set
            {
                OnTransactionPriceChanging(value);
                ReportPropertyChanging("TransactionPrice");
                _TransactionPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionPrice");
                OnTransactionPriceChanged();
            }
        }
        private global::System.Decimal _TransactionPrice;
        partial void OnTransactionPriceChanging(global::System.Decimal value);
        partial void OnTransactionPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_OrderAllocations_Blocks", "Block")]
        public Block Block
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_OrderAllocations_Blocks", "Block").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_OrderAllocations_Blocks", "Block").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Block> BlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("EquityTradingDBModel.FK_OrderAllocations_Blocks", "Block");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Block>("EquityTradingDBModel.FK_OrderAllocations_Blocks", "Block", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_OrderAllocations_ExecutedBlocks", "ExecutedBlock")]
        public ExecutedBlock ExecutedBlock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExecutedBlock>("EquityTradingDBModel.FK_OrderAllocations_ExecutedBlocks", "ExecutedBlock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExecutedBlock>("EquityTradingDBModel.FK_OrderAllocations_ExecutedBlocks", "ExecutedBlock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExecutedBlock> ExecutedBlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExecutedBlock>("EquityTradingDBModel.FK_OrderAllocations_ExecutedBlocks", "ExecutedBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExecutedBlock>("EquityTradingDBModel.FK_OrderAllocations_ExecutedBlocks", "ExecutedBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_OrderAllocations_Orders", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("EquityTradingDBModel.FK_OrderAllocations_Orders", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("EquityTradingDBModel.FK_OrderAllocations_Orders", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("EquityTradingDBModel.FK_OrderAllocations_Orders", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("EquityTradingDBModel.FK_OrderAllocations_Orders", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="Portfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Portfolio object.
        /// </summary>
        /// <param name="portfolioID">Initial value of the PortfolioID property.</param>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        public static Portfolio CreatePortfolio(global::System.Int32 portfolioID, global::System.String portfolioName)
        {
            Portfolio portfolio = new Portfolio();
            portfolio.PortfolioID = portfolioID;
            portfolio.PortfolioName = portfolioName;
            return portfolio;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortfolioID
        {
            get
            {
                return _PortfolioID;
            }
            set
            {
                if (_PortfolioID != value)
                {
                    OnPortfolioIDChanging(value);
                    ReportPropertyChanging("PortfolioID");
                    _PortfolioID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PortfolioID");
                    OnPortfolioIDChanged();
                }
            }
        }
        private global::System.Int32 _PortfolioID;
        partial void OnPortfolioIDChanging(global::System.Int32 value);
        partial void OnPortfolioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                OnPortfolioNameChanging(value);
                ReportPropertyChanging("PortfolioName");
                _PortfolioName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PortfolioName");
                OnPortfolioNameChanged();
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Portfolio_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EquityTradingDBModel.FK_Portfolio_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EquityTradingDBModel.FK_Portfolio_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EquityTradingDBModel.FK_Portfolio_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("EquityTradingDBModel.FK_Portfolio_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Portfolio", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Portfolio", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Portfolio", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="ProposedBlock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProposedBlock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProposedBlock object.
        /// </summary>
        /// <param name="proposedBlockID">Initial value of the ProposedBlockID property.</param>
        /// <param name="securityID">Initial value of the SecurityID property.</param>
        /// <param name="blockSide">Initial value of the BlockSide property.</param>
        /// <param name="limitPrice">Initial value of the LimitPrice property.</param>
        /// <param name="stopPrice">Initial value of the StopPrice property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        public static ProposedBlock CreateProposedBlock(global::System.Int32 proposedBlockID, global::System.Int32 securityID, global::System.String blockSide, global::System.Decimal limitPrice, global::System.Decimal stopPrice, global::System.Int32 totalQuantity)
        {
            ProposedBlock proposedBlock = new ProposedBlock();
            proposedBlock.ProposedBlockID = proposedBlockID;
            proposedBlock.SecurityID = securityID;
            proposedBlock.BlockSide = blockSide;
            proposedBlock.LimitPrice = limitPrice;
            proposedBlock.StopPrice = stopPrice;
            proposedBlock.TotalQuantity = totalQuantity;
            return proposedBlock;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProposedBlockID
        {
            get
            {
                return _ProposedBlockID;
            }
            set
            {
                if (_ProposedBlockID != value)
                {
                    OnProposedBlockIDChanging(value);
                    ReportPropertyChanging("ProposedBlockID");
                    _ProposedBlockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProposedBlockID");
                    OnProposedBlockIDChanged();
                }
            }
        }
        private global::System.Int32 _ProposedBlockID;
        partial void OnProposedBlockIDChanging(global::System.Int32 value);
        partial void OnProposedBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                OnSecurityIDChanging(value);
                ReportPropertyChanging("SecurityID");
                _SecurityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityID");
                OnSecurityIDChanged();
            }
        }
        private global::System.Int32 _SecurityID;
        partial void OnSecurityIDChanging(global::System.Int32 value);
        partial void OnSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BlockSide
        {
            get
            {
                return _BlockSide;
            }
            set
            {
                OnBlockSideChanging(value);
                ReportPropertyChanging("BlockSide");
                _BlockSide = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BlockSide");
                OnBlockSideChanged();
            }
        }
        private global::System.String _BlockSide;
        partial void OnBlockSideChanging(global::System.String value);
        partial void OnBlockSideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LimitPrice
        {
            get
            {
                return _LimitPrice;
            }
            set
            {
                OnLimitPriceChanging(value);
                ReportPropertyChanging("LimitPrice");
                _LimitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitPrice");
                OnLimitPriceChanged();
            }
        }
        private global::System.Decimal _LimitPrice;
        partial void OnLimitPriceChanging(global::System.Decimal value);
        partial void OnLimitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal StopPrice
        {
            get
            {
                return _StopPrice;
            }
            set
            {
                OnStopPriceChanging(value);
                ReportPropertyChanging("StopPrice");
                _StopPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopPrice");
                OnStopPriceChanged();
            }
        }
        private global::System.Decimal _StopPrice;
        partial void OnStopPriceChanging(global::System.Decimal value);
        partial void OnStopPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_ProposedBlocks_Securities", "Security")]
        public Security Security
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_ProposedBlocks_Securities", "Security").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_ProposedBlocks_Securities", "Security").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Security> SecurityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_ProposedBlocks_Securities", "Security");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Security>("EquityTradingDBModel.FK_ProposedBlocks_Securities", "Security", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="Security")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Security : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Security object.
        /// </summary>
        /// <param name="securityID">Initial value of the SecurityID property.</param>
        /// <param name="securityName">Initial value of the SecurityName property.</param>
        /// <param name="securitySymbol">Initial value of the SecuritySymbol property.</param>
        public static Security CreateSecurity(global::System.Int32 securityID, global::System.String securityName, global::System.String securitySymbol)
        {
            Security security = new Security();
            security.SecurityID = securityID;
            security.SecurityName = securityName;
            security.SecuritySymbol = securitySymbol;
            return security;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                if (_SecurityID != value)
                {
                    OnSecurityIDChanging(value);
                    ReportPropertyChanging("SecurityID");
                    _SecurityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityID");
                    OnSecurityIDChanged();
                }
            }
        }
        private global::System.Int32 _SecurityID;
        partial void OnSecurityIDChanging(global::System.Int32 value);
        partial void OnSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityName
        {
            get
            {
                return _SecurityName;
            }
            set
            {
                OnSecurityNameChanging(value);
                ReportPropertyChanging("SecurityName");
                _SecurityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityName");
                OnSecurityNameChanged();
            }
        }
        private global::System.String _SecurityName;
        partial void OnSecurityNameChanging(global::System.String value);
        partial void OnSecurityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecuritySymbol
        {
            get
            {
                return _SecuritySymbol;
            }
            set
            {
                OnSecuritySymbolChanging(value);
                ReportPropertyChanging("SecuritySymbol");
                _SecuritySymbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecuritySymbol");
                OnSecuritySymbolChanged();
            }
        }
        private global::System.String _SecuritySymbol;
        partial void OnSecuritySymbolChanging(global::System.String value);
        partial void OnSecuritySymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LastTradedPrice
        {
            get
            {
                return _LastTradedPrice;
            }
            set
            {
                OnLastTradedPriceChanging(value);
                ReportPropertyChanging("LastTradedPrice");
                _LastTradedPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastTradedPrice");
                OnLastTradedPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _LastTradedPrice;
        partial void OnLastTradedPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnLastTradedPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Blocks_Securities", "Block")]
        public EntityCollection<Block> Blocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Block>("EquityTradingDBModel.FK_Blocks_Securities", "Block");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Block>("EquityTradingDBModel.FK_Blocks_Securities", "Block", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Securities", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Securities", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Securities", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_ProposedBlocks_Securities", "ProposedBlock")]
        public EntityCollection<ProposedBlock> ProposedBlocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProposedBlock>("EquityTradingDBModel.FK_ProposedBlocks_Securities", "ProposedBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProposedBlock>("EquityTradingDBModel.FK_ProposedBlocks_Securities", "ProposedBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_SecurityConfigurationDetails_Securities", "SecurityConfigurationDetail")]
        public EntityCollection<SecurityConfigurationDetail> SecurityConfigurationDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityConfigurationDetail>("EquityTradingDBModel.FK_SecurityConfigurationDetails_Securities", "SecurityConfigurationDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityConfigurationDetail>("EquityTradingDBModel.FK_SecurityConfigurationDetails_Securities", "SecurityConfigurationDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="SecurityConfigurationDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityConfigurationDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityConfigurationDetail object.
        /// </summary>
        /// <param name="maxPriceSpread">Initial value of the MaxPriceSpread property.</param>
        /// <param name="maxExecutionNumber">Initial value of the MaxExecutionNumber property.</param>
        /// <param name="maxExecutionInterval">Initial value of the MaxExecutionInterval property.</param>
        /// <param name="fullyExecutedOrderProbability">Initial value of the FullyExecutedOrderProbability property.</param>
        /// <param name="securityID">Initial value of the SecurityID property.</param>
        public static SecurityConfigurationDetail CreateSecurityConfigurationDetail(global::System.Int32 maxPriceSpread, global::System.Int32 maxExecutionNumber, global::System.Byte[] maxExecutionInterval, global::System.Int32 fullyExecutedOrderProbability, global::System.Int32 securityID)
        {
            SecurityConfigurationDetail securityConfigurationDetail = new SecurityConfigurationDetail();
            securityConfigurationDetail.MaxPriceSpread = maxPriceSpread;
            securityConfigurationDetail.MaxExecutionNumber = maxExecutionNumber;
            securityConfigurationDetail.MaxExecutionInterval = maxExecutionInterval;
            securityConfigurationDetail.FullyExecutedOrderProbability = fullyExecutedOrderProbability;
            securityConfigurationDetail.SecurityID = securityID;
            return securityConfigurationDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxPriceSpread
        {
            get
            {
                return _MaxPriceSpread;
            }
            set
            {
                if (_MaxPriceSpread != value)
                {
                    OnMaxPriceSpreadChanging(value);
                    ReportPropertyChanging("MaxPriceSpread");
                    _MaxPriceSpread = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaxPriceSpread");
                    OnMaxPriceSpreadChanged();
                }
            }
        }
        private global::System.Int32 _MaxPriceSpread;
        partial void OnMaxPriceSpreadChanging(global::System.Int32 value);
        partial void OnMaxPriceSpreadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxExecutionNumber
        {
            get
            {
                return _MaxExecutionNumber;
            }
            set
            {
                if (_MaxExecutionNumber != value)
                {
                    OnMaxExecutionNumberChanging(value);
                    ReportPropertyChanging("MaxExecutionNumber");
                    _MaxExecutionNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaxExecutionNumber");
                    OnMaxExecutionNumberChanged();
                }
            }
        }
        private global::System.Int32 _MaxExecutionNumber;
        partial void OnMaxExecutionNumberChanging(global::System.Int32 value);
        partial void OnMaxExecutionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] MaxExecutionInterval
        {
            get
            {
                return StructuralObject.GetValidValue(_MaxExecutionInterval);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_MaxExecutionInterval, value))
                {
                    OnMaxExecutionIntervalChanging(value);
                    ReportPropertyChanging("MaxExecutionInterval");
                    _MaxExecutionInterval = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MaxExecutionInterval");
                    OnMaxExecutionIntervalChanged();
                }
            }
        }
        private global::System.Byte[] _MaxExecutionInterval;
        partial void OnMaxExecutionIntervalChanging(global::System.Byte[] value);
        partial void OnMaxExecutionIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FullyExecutedOrderProbability
        {
            get
            {
                return _FullyExecutedOrderProbability;
            }
            set
            {
                if (_FullyExecutedOrderProbability != value)
                {
                    OnFullyExecutedOrderProbabilityChanging(value);
                    ReportPropertyChanging("FullyExecutedOrderProbability");
                    _FullyExecutedOrderProbability = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FullyExecutedOrderProbability");
                    OnFullyExecutedOrderProbabilityChanged();
                }
            }
        }
        private global::System.Int32 _FullyExecutedOrderProbability;
        partial void OnFullyExecutedOrderProbabilityChanging(global::System.Int32 value);
        partial void OnFullyExecutedOrderProbabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                if (_SecurityID != value)
                {
                    OnSecurityIDChanging(value);
                    ReportPropertyChanging("SecurityID");
                    _SecurityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityID");
                    OnSecurityIDChanged();
                }
            }
        }
        private global::System.Int32 _SecurityID;
        partial void OnSecurityIDChanging(global::System.Int32 value);
        partial void OnSecurityIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_SecurityConfigurationDetails_Securities", "Security")]
        public Security Security
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_SecurityConfigurationDetails_Securities", "Security").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_SecurityConfigurationDetails_Securities", "Security").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Security> SecurityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Security>("EquityTradingDBModel.FK_SecurityConfigurationDetails_Securities", "Security");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Security>("EquityTradingDBModel.FK_SecurityConfigurationDetails_Securities", "Security", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static Status CreateStatus(global::System.Int32 statusID, global::System.String statusName)
        {
            Status status = new Status();
            status.StatusID = statusID;
            status.StatusName = statusName;
            return status;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_Status", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Status", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_Status", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String userName, global::System.String name, global::System.Int32 roleID, global::System.String password)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            user.Name = name;
            user.RoleID = roleID;
            user.Password = password;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_User", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_User", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_User", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_Orders_User1", "Order")]
        public EntityCollection<Order> Orders1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_User1", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EquityTradingDBModel.FK_Orders_User1", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_User_UserRole", "UserRole")]
        public UserRole UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("EquityTradingDBModel.FK_User_UserRole", "UserRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("EquityTradingDBModel.FK_User_UserRole", "UserRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("EquityTradingDBModel.FK_User_UserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("EquityTradingDBModel.FK_User_UserRole", "UserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EquityTradingDBModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static UserRole CreateUserRole(global::System.Int32 roleID, global::System.String roleName)
        {
            UserRole userRole = new UserRole();
            userRole.RoleID = roleID;
            userRole.RoleName = roleName;
            return userRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EquityTradingDBModel", "FK_User_UserRole", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("EquityTradingDBModel.FK_User_UserRole", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("EquityTradingDBModel.FK_User_UserRole", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
