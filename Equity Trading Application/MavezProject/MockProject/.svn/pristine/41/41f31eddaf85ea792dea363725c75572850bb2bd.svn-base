<Window x:Class="ExecutionTraderMainWindow.Views.EditBlockView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:ExecutionTraderMainWindow.ViewModel"
        Title="EditBlockView" Height="400" Width="1100" ResizeMode="NoResize" WindowState="Normal">
    <!--<Window.Resources>
        <vm:EditBlockViewModel x:Key="EditBlock"/>
    </Window.Resources>-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition  />
            <RowDefinition Height="0.2*"/>
        </Grid.RowDefinitions>

        <!--<Label Grid.Row="0" Content="Edit Block"
               FontWeight="ExtraBlack" FontFamily="Britannic"
               HorizontalAlignment="Center" VerticalAlignment="Center"
               FontSize="25"/>-->
        <StackPanel>
            <Button x:Name="HiddenChangePriceMessageBoxCommandRunner" Visibility="Hidden" Command="{Binding ChangePriceMessageBoxShowCommand,Mode=OneWay}"/>
            <DataGrid TargetUpdated="DataGrid_TargetUpdated" x:Name="EditBlockDataGrid"  Height="Auto"
                   ItemsSource="{Binding SelectedBlockList,Mode=TwoWay}" Background="LightBlue"
                  SelectedItem="{Binding SelectedBlock,Mode=TwoWay}" AutoGenerateColumns="False" IsReadOnly="False"
                  RowDetailsVisibilityMode="VisibleWhenSelected" Margin="0">
            <DataGrid.Columns>
                    <DataGridTextColumn Header="Block ID" Binding="{Binding BlockId}" Width="110" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Side" Binding="{Binding BlockSide}" Width="110" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Symbol" Binding="{Binding security.SecuritySymbol}" Width="110" IsReadOnly="True" />
                    <DataGridTextColumn Header="Status" Binding="{Binding BlockStatus }" Width="110" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Limit Price" Binding="{Binding LimitPrice,NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="110"  />
                    <DataGridTextColumn Header="Stop Price" Binding="{Binding StopPrice,NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="110"/>
                    <DataGridTextColumn Header="Total Quantity" Binding="{Binding TotalQuantity}" Width="110" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Executed Quantity" Binding="{Binding ExecutedQuantity}" Width="160" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Open Quantity" Binding="{Binding OpenQuantity}" Width="110" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
            <DataGrid x:Name="OrdersGrid"  ItemsSource="{Binding OrdersOfSelectedBlock,Mode=TwoWay}" Background="White" Height="260"  AutoGenerateColumns="False" Foreground="Black" AlternatingRowBackground="Lavender" SelectedItem="{Binding SelectedOrder}" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="OrderId" Binding="{Binding OrderId}" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="symbol" Header="Symbol" Binding="{Binding Security.SecuritySymbol}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Side" Binding="{Binding Side}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Order Type" Binding="{Binding OrderType}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Qualifier" Binding="{Binding OrderQualifier}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Status" Binding="{Binding Status.StatusName}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Account Type" Binding="{Binding AccountType}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Total Quantity" Binding="{Binding TotalQuantity}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Open Quantity" Binding="{Binding OpenQuantity}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Allocated Quantity" Binding="{Binding AllocatedQuantity}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Stop Price" Binding="{Binding StopPrice}" />
                    <DataGridTextColumn Header="Limit Price" Binding="{Binding LimitPrice}" />
                    <DataGridTextColumn Header="PortFolio Manager" Binding="{Binding Manager.Name}" IsReadOnly="True"/>
                    <DataGridTemplateColumn Header="Action">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Remove Order" Click="RemoveOrderClick"></Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button x:Name="SaveButton" Content="SAVE" Grid.Column="0"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    
                    Height="40" Width="150"
                    Command="{Binding SaveBlockCommand,Mode=OneWay}"
                    />


            <Button x:Name="CancelButton" Content="CANCEL" Grid.Column="1"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    
                    Height="40" Width="150"
                     Command="{Binding CancelCommand,Mode=OneWay}" />

            <Button x:Name="HiddenRemoveOrderButton" Command="{Binding DeleteOrderCommand,Mode=OneWay}" Visibility="Hidden"/>
        </Grid>


    </Grid>
</Window>